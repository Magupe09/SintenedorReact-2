/* src/Components/common/Modal.module.css */

/* Estilos para el fondo oscuro (overlay) */
.modal-overlay {
  position: fixed;
  /* Fija el overlay en relación a la ventana del navegador */
  top: 0;
  /* Lo pega al borde superior */
  left: 0;
  /* Lo pega al borde izquierdo */
  width: 100%;
  /* Ocupa todo el ancho de la ventana */
  height: 100%;
  /* Ocupa toda la altura de la ventana */
  background-color: rgba(0, 0, 0, 0.9);
  /* Fondo negro semi-transparente (ajusta 0.7 para más/menos opacidad) */

  /* Usamos flexbox para CENTRAR FÁCILMENTE la caja del modal dentro del overlay */
  display: flex;
  justify-content: center;
  /* Centra horizontalmente los items hijos (el modal-box) */
  align-items: center;
  /* Centra verticalmente los items hijos (el modal-box) */

  z-index: 1000;
}

/* Estilos para la caja principal del modal (el contenido) */
.modal-box {

  display: grid;
  grid-template-columns: minmax(0, 1fr) minmax(0, 2fr);
  gap: 5px;
  background-color: var(--color-third);
  /* Fondo blanco para la caja */
  padding: 10px;
  /* Espacio dentro de la caja */
  border-radius: 10px;
  /* Esquinas redondeadas */
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
  /* Sombra */

  /* Controlamos el tamaño de la caja del modal */
  max-width: 100%;
  /* Ancho máximo: 90% del ancho del overlay (viewport) */
  width: 600px;
  /* Ancho preferido */
  max-height: 90vh;
  /* Altura máxima: 90% de la altura de la ventana (vh = viewport height) */

  /* Permite scroll interno si el contenido excede el max-height */
  overflow-y: auto;

  z-index: 1001;
  /* Asegura que esté por encima del overlay */

  /* Con display: flex en el overlay, no necesitas position/top/left/transform para centrar la caja.
       Las propiedades justify-content y align-items en el overlay se encargan de eso.
       Si NO USAS flexbox en el overlay, la técnica position: fixed/top/left/transform es la alternativa.
       Vamos a asumir que usaste flexbox en el overlay como te sugerí.
    */
}

/* ... estilos adicionales para contenido como modal-header, modal-image, etc. (añadidos después) ... */
.modal-header {
  margin-bottom: 0px;
  background-color: var(--color-secondary);
  gap: 0px;
  border-radius: 10px;
  display: flex;
  flex-direction: column;
  text-align: center;
  
  transition: transform 0.2s ease-in-out;
  /* Estilos para el encabezado (nombre y cerrar) */
}

.modal-header h3 {
  font-size: 2rem;
  margin: 7px;
}

.modal-header p {
  
  font-size: 1rem;
  margin: 7px;
}

.modal-header h4 {
  font-size: 1.5rem;
  margin: -3px 0;
}

.close-button {
  position: absolute;
  top: 100px;
  right: 10px;
  width: 45px;
  height: 40px;
  background-color: var(--color-four);
  color: var(--color-third);
  font-size: 1.8em;
  border-radius: 20px;
  transition: transform 0.2s ease-in-out;
  z-index: 100;
  /* Estilos para el botón 'x' */
}

.close-button:hover {
  transform: translateY(-5px);
  /* Levanta ligeramente el item */
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 5);
  cursor: pointer;
  /* Aumenta la sombra */
}

.modal-body {
  display: flex;
  flex-direction: column;
  align-items: end;
  gap: 10px;
  position: relative;
}

.modal-image {
  /* Estilos para la imagen dentro del modal */
  width: 100%;
  /* La imagen ocupa todo el ancho de su contenedor (.pizza-item) */
  height: 332px;
  /* Define una altura fija para las imágenes (ajústala si lo necesitas) */
  object-fit: cover;
  /* Cubre el área definida sin deformar la imagen */
  /* Elimina border-radius aquí si ya usas overflow: hidden en .pizza-item */
  /* border-radius: 4px; */
  margin-bottom: 0;
  border-radius: 10px;
  transition: transform 0.2s ease-in-out;
  border: 1px solid #ccc;
  border-radius: 8px;
  box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.1);
}

.modal-image:hover {
  transform: translateY(-5px);
  /* Levanta ligeramente el item */
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 5);
  /* Aumenta la sombra */
}

.price-list {
  list-style: none;
  padding: 0;
  margin-top: 16px;
  margin-bottom: 15px;
  /* Estilos para la lista ul de precios */
}

.price-item {
  /* Estilos para cada li de precio */
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  /* Separa texto/precio de controles de cantidad */
  align-items: center;
  /* Alinea verticalmente */
  padding: 0;
  /* Añade padding arriba/abajo */
  /* Añade un borde inferior para separar cada item */
  border-bottom: 1px solid var(--color-four);
  font-size: 1rem;
  /* Tamaño base de la fuente para el item */
  color: var(--color-four);
  /* Color de texto base para el item */

  /* flex-wrap: wrap; -- Ya lo definimos, asegura que esté */
}

.quantity-controls {
  display: flex;
  
  justify-content: center;
  align-items: center;
  gap: 18px;
  
  width: 40px;
}

.buttonControls {

  display: flex;
  justify-content: center;
  align-items: center;
  width: 45px;
  height: 21px;
  background-color: var(--color-primary);
  color: var(--color-four);
  font-size: 1.8em;
  border-radius: 5px;
 
  top: 3px;
  z-index: 100;
  cursor: pointer;
}

.buttonControls:hover {
 
  /* Levanta ligeramente el item */
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 5);
  /* Aumenta la sombra */
}


.add-to-cart-button {
  position: absolute;
  bottom: 10px;
  right: 5px;
  transform: scale(1);
  transition: transform 0.3s ease-out, background-color 0.3s ease-out;
  transform-origin: center center;
  /* Otros estilos base de tu botón aquí */
  padding: 5px 10px;
  background-color: var(--color-four); /* Un naranja agradable */
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  font-size: 0.9rem;
  font-weight: bold;
  /* Para que el botón no se mueva al escalar si está en un flex/grid */
  flex-shrink: 0;
}


.animate-pulse {
  transform: scale(1.2); /* Escala el botón un 5% más grande */
  background-color: #4CAF50;
  border: 2px solid var(--color-primary);
  /* Puedes añadir un cambio de color si quieres, ej: */
  /* background-color: #4CAF50; /* Verde de confirmación */
}

@media (max-width: 768px){
  .modal-box {
    display: flex;
    flex-direction: column;
    gap: 5px;
    background-color: var(--color-four);
    /* Fondo blanco para la caja */
    padding: 10px;
    /* Espacio dentro de la caja */
    border-radius: 10px;
    /* Esquinas redondeadas */
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.3);
    /* Sombra */
  
    /* Controlamos el tamaño de la caja del modal */
    max-width: 100%;
    /* Ancho máximo: 90% del ancho del overlay (viewport) */
    width: 200px;
    /* Ancho preferido */
    max-height: 70vh;
    /* Altura máxima: 90% de la altura de la ventana (vh = viewport height) */
  
    /* Permite scroll interno si el contenido excede el max-height */
    overflow-y: auto;
  
    z-index: 1001;
    /* Asegura que esté por encima del overlay */
  
    /* Con display: flex en el overlay, no necesitas position/top/left/transform para centrar la caja.
         Las propiedades justify-content y align-items en el overlay se encargan de eso.
         Si NO USAS flexbox en el overlay, la técnica position: fixed/top/left/transform es la alternativa.
         Vamos a asumir que usaste flexbox en el overlay como te sugerí.
      */
  }
  .modal-header {
    
    margin-bottom: 0px;
    background-color: var(--color-secondary);
    gap: 0px;
    border-radius: 10px;
    display: flex;
    flex-direction: column;
    text-align: center;
    margin: 0;
    transition: transform 0.2s ease-in-out;
    /* Estilos para el encabezado (nombre y cerrar) */
  }
  
  .modal-header h3 {
    font-size: 1.4rem;
    color: var(--color-secondary);
    margin: -3px;
    background-color: var(--color-primary);
    border-radius: 5px;
  }
  
  .modal-header p {
    color: var(--color-four);
    font-size: 0.9rem;
    margin: 4px;
  }
  
  .modal-header h4 {
    font-size: 1rem;
    color: var(--color-four);
    margin-bottom: -15px;
    
  }
  
  .close-button {
    position: absolute;
    top: 100px;
    right: 80px;
    width: 35px;
    height: 35px;
    background-color: var(--color-four);
    color: var(--color-third);
    font-size: 1.8em;
    border-radius: 20px;
    transition: transform 0.2s ease-in-out;
    z-index: 100;
    /* Estilos para el botón 'x' */
  }
  
  .close-button:hover {
    
    /* Levanta ligeramente el item */
    box-shadow: 4px 4px 10px rgba(0, 0, 0, 5);
    cursor: pointer;
    /* Aumenta la sombra */
  }
  
  .modal-body {
    display: flex;
    flex-direction: column;
    align-items: end;
    gap: 5px;
    position: relative;
  }
  
  .modal-image {
    /* Estilos para la imagen dentro del modal */
    width: 100%;
    /* La imagen ocupa todo el ancho de su contenedor (.pizza-item) */
    height: 100px;
    /* Define una altura fija para las imágenes (ajústala si lo necesitas) */
    object-fit: cover;
    /* Cubre el área definida sin deformar la imagen */
    /* Elimina border-radius aquí si ya usas overflow: hidden en .pizza-item */
    /* border-radius: 4px; */
    margin-bottom: 0;
    border-radius: 10px;
    transition: transform 0.2s ease-in-out;
    border: 1px solid #ccc;
    border-radius: 8px;
    box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.1);
  }
  
  .modal-image:hover {
    transform: translateY(-5px);
    /* Levanta ligeramente el item */
    box-shadow: 4px 4px 10px rgba(0, 0, 0, 5);
    /* Aumenta la sombra */
  }
  
  .price-list {
    list-style: none;
    padding: 0;
    margin-top: 16px;
    margin-bottom: -7px;
    /* Estilos para la lista ul de precios */
    

  }
  
  .price-item {
    
    /* Estilos para cada li de precio */
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    /* Separa texto/precio de controles de cantidad */
    align-items: center;
    /* Alinea verticalmente */
    padding: 0;
    /* Añade padding arriba/abajo */
    /* Añade un borde inferior para separar cada item */
    border-bottom: 1px solid var(--color-four);
    font-size: 1rem;
    /* Tamaño base de la fuente para el item */
    color: var(--color-four);
    /* Color de texto base para el item */
    margin-bottom: 2px;
    /* flex-wrap: wrap; -- Ya lo definimos, asegura que esté */
  }
  
  .quantity-controls {
    display: flex;
    
    justify-content: center;
    align-items: center;
    gap: 42px;
    color: var(--color-four);
    width: 35px;
  }
  
  .buttonControls {
  
    display: flex;
    justify-content: center;
    align-items: center;
    width: 37px;
    height: 25px;
    background-color: var(--color-primary);
    color: var(--color-four);
    font-size: 0.9rem;
    border-radius: 6px;
   
    top: 3px;
    z-index: 100;
    cursor: pointer;
    color: var(--color-secondary);
  }
  
  .buttonControls:hover {
    
    /* Levanta ligeramente el item */
    box-shadow: 4px 4px 10px rgba(0, 0, 0, 5);
    /* Aumenta la sombra */
  }
  
  
  .add-to-cart-button {
    position: absolute;
    bottom: 10px;
    right: 5px;
    transform: scale(1);
    transition: transform 0.3s ease-out, background-color 0.3s ease-out;
    transform-origin: center center;
    /* Otros estilos base de tu botón aquí */
    padding: 5px 10px;
    background-color: var(--color-four); /* Un naranja agradable */
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 0.7rem;
    font-weight: bold;
    /* Para que el botón no se mueva al escalar si está en un flex/grid */
    flex-shrink: 0;
  }
  
  
  .animate-pulse {
    transform: scale(1.2); /* Escala el botón un 5% más grande */
    background-color: #4CAF50;
    border: 2px solid var(--color-primary);
    /* Puedes añadir un cambio de color si quieres, ej: */
    /* background-color: #4CAF50; /* Verde de confirmación */
  }
  .span{
    font-size: 1.5rem;
    
  }
  
}